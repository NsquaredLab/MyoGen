
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/04_simulate_surface_emg.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_04_simulate_surface_emg.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_04_simulate_surface_emg.py:


Surface EMG Signals
=============================

After having created the **MUAPs**, we can finally simulate the **surface EMG** by creating a **surface EMG model**.

.. note::
    The **surface EMG** signals are the **summation** of the **MUAPs** at the surface of the skin.

    In **Myogen**, we can simulate the **surface EMG** by convolving the **MUAPs** with the **spike trains** of the **motor units**.

.. GENERATED FROM PYTHON SOURCE LINES 12-14

.. code-block:: Python


    import shutil







.. GENERATED FROM PYTHON SOURCE LINES 15-17

Import Libraries
-----------------

.. GENERATED FROM PYTHON SOURCE LINES 17-26

.. code-block:: Python


    from pathlib import Path

    import joblib
    import matplotlib
    import numpy as np
    import seaborn as sns
    from matplotlib import pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 27-30

Load Muscle Model
----------------------------


.. GENERATED FROM PYTHON SOURCE LINES 30-34

.. code-block:: Python


    save_path = Path("./results")
    muscle = joblib.load(save_path / "muscle_model.pkl")








.. GENERATED FROM PYTHON SOURCE LINES 35-38

Load Motor Neuron Pool
----------------------------


.. GENERATED FROM PYTHON SOURCE LINES 38-41

.. code-block:: Python


    motor_neuron_pool = joblib.load(save_path / "motor_neuron_pool.pkl")








.. GENERATED FROM PYTHON SOURCE LINES 42-47

Load Surface EMG Model
----------------------------

.. note::
  Because of computation time, we pre-computed the **surface EMG** model for 100 motor units.

.. GENERATED FROM PYTHON SOURCE LINES 47-51

.. code-block:: Python


    surface_emg = joblib.load(save_path / "surface_emg_100.pkl")









.. GENERATED FROM PYTHON SOURCE LINES 52-56

Generate Surface EMG
-----------------------------------------------

To simulate the **surface EMG**, we need to run the ``simulate_surface_emg`` method of the **SurfaceEMG** object.

.. GENERATED FROM PYTHON SOURCE LINES 56-71

.. code-block:: Python


    surface_emg_signals = surface_emg.simulate_surface_emg(
        motor_neuron_pool=motor_neuron_pool
    )

    print(f"Surface EMG simulation completed!")
    print(f"Generated EMG shape: {surface_emg_signals.shape}")
    print(f"  - {surface_emg_signals.shape[0]} pools")
    print(f"  - {surface_emg_signals.shape[1]} electrode rows")
    print(f"  - {surface_emg_signals.shape[2]} electrode columns")
    print(f"  - {surface_emg_signals.shape[3]} time samples")

    # Save the surface EMG results
    joblib.dump(surface_emg_signals, save_path / "surface_emg_signals.pkl")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Simulating surface EMG (CPU):   0%|          | 0/2 [00:00<?, ?it/s]    Simulating surface EMG (CPU):  50%|█████     | 1/2 [00:22<00:22, 22.18s/it]    Simulating surface EMG (CPU): 100%|██████████| 2/2 [00:39<00:00, 19.39s/it]    Simulating surface EMG (CPU): 100%|██████████| 2/2 [00:39<00:00, 19.81s/it]
    Surface EMG simulation completed!
    Generated EMG shape: (1, 2, 5, 5, 40000)
      - 1 pools
      - 2 electrode rows
      - 5 electrode columns
      - 5 time samples

    ['results/surface_emg_signals.pkl']



.. GENERATED FROM PYTHON SOURCE LINES 72-81

Visualize Surface EMG Results
-----------------------------

.. note::
  Since **MyoGen** is a simulator, the results will have no real-world noise.

  We can add noise to the **surface EMG** signals to make them more realistic.

  For this the method ``add_noise`` is used.

.. GENERATED FROM PYTHON SOURCE LINES 81-131

.. code-block:: Python


    surface_emg.add_noise(snr_db=10.0)

    # Load input current matrix
    input_current_matrix = joblib.load(save_path / "input_current_matrix.pkl")
    shutil.rmtree(matplotlib.get_cachedir())
    with plt.xkcd():
        plt.rcParams.update({"font.size": 24})
        # Create single plot with normalized signals
        fig, ax = plt.subplots(figsize=(12, 6))
        # Get the signals
        emg_signal = surface_emg.noisy_surface_emg[0, 0, 3, 3]
        current_signal = input_current_matrix[0]  # Only first current

        # Normalize EMG by dividing by maximum
        emg_normalized = emg_signal / np.max(emg_signal)

        # Normalize current between 0 and 1
        current_normalized = (current_signal - np.min(current_signal)) / (
            np.max(current_signal) - np.min(current_signal)
        )

        # Plot both normalized signals on same axis
    ax.plot(
        motor_neuron_pool.times / 1000.0,
        emg_normalized,
        linewidth=2,
        label="Surface EMG",
    )

    with plt.xkcd():
        ax.plot(
            motor_neuron_pool.times / 1000.0,
            current_normalized,
            linewidth=2,
            label="Input Current",
            alpha=0.7,
        )

        ax.set_xlabel("Time (s)")
        ax.set_ylabel("Normalized Amplitude")
        ax.grid(True, alpha=0.3)
        ax.legend()

        sns.despine(trim=True, left=False, bottom=False, right=True, top=True, offset=5)

        plt.title("Normalized Surface EMG and Input Current")

    plt.tight_layout()
    plt.show()



.. image-sg:: /auto_examples/images/sphx_glr_04_simulate_surface_emg_001.png
   :alt: Normalized Surface EMG and Input Current
   :srcset: /auto_examples/images/sphx_glr_04_simulate_surface_emg_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Target SNR: 10.00 dB
    Achieved SNR: 10.00 dB





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 40.080 seconds)


.. _sphx_glr_download_auto_examples_04_simulate_surface_emg.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 04_simulate_surface_emg.ipynb <04_simulate_surface_emg.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 04_simulate_surface_emg.py <04_simulate_surface_emg.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 04_simulate_surface_emg.zip <04_simulate_surface_emg.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
